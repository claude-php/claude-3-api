name: Auto Tag Release and Update Composer

on:
  push:
    branches:
      - main  # or your default branch

permissions:
  contents: write  # This gives the GITHUB_TOKEN write access to repository contents

jobs:
  create-tag-and-update-composer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          CURRENT_VERSION=${CURRENT_VERSION#v}
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Validate and bump version
        id: bump_version
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.current_version }}"
          if [[ ! $CURRENT_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Resetting to 0.1.8"
            CURRENT_VERSION="0.1.8"
          fi
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=$((VERSION_PARTS[2] + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update Composer version and lock file
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          if [[ ! $NEW_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version number generated: $NEW_VERSION"
            exit 1
          fi
          echo "Updating to version: $NEW_VERSION"
          sed -i 's/"version": ".*"/"version": "'"${NEW_VERSION}"'"/' composer.json
          composer update --lock
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add composer.json composer.lock
          git commit -m "Bump version to ${NEW_VERSION}"
          git tag -a "v${NEW_VERSION}" -m "Version ${NEW_VERSION}"
          git push && git push --tags

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |
            Changes in this Release
            - Updated Composer version to ${{ steps.bump_version.outputs.new_version }}
            - Other changes...
          draft: false
          prerelease: false
